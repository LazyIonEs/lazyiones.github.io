<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用 sourceSets 管理风味特定的 AndroidManifest.xml</title>
      <link href="/post/b3b8a43c.html"/>
      <url>/post/b3b8a43c.html</url>
      
        <content type="html"><![CDATA[<p>当使用 <code>sourceSets</code> 管理风味特定的 <code>AndroidManifest.xml</code> 配置时，下面是一个基本的代码示例</p><h2 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">app/</span><br><span class="line">|-- src/</span><br><span class="line">|   |-- main/</span><br><span class="line">|   |   |-- AndroidManifest.xml (包含公用配置)</span><br><span class="line">|   |   |-- java/</span><br><span class="line">|   |   |-- res/</span><br><span class="line">|   |</span><br><span class="line">|   |-- xiaomi/</span><br><span class="line">|   |   |-- AndroidManifest.xml (风味特定配置)</span><br><span class="line">|   |</span><br><span class="line">|   |-- other/</span><br><span class="line">|   |   |-- AndroidManifest.xml (风味特定配置)</span><br><span class="line">|   |</span><br><span class="line">|   |-- ...</span><br></pre></td></tr></table></figure><h2 id="app-build-gradle"><a href="#app-build-gradle" class="headerlink" title="app&#x2F;build.gradle"></a>app&#x2F;build.gradle</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    <span class="comment">// ... 其他配置 ...</span></span><br><span class="line"></span><br><span class="line">    sourceSets &#123;</span><br><span class="line">        xiaomi &#123;</span><br><span class="line">            <span class="comment">// 指定风味特定的 AndroidManifest.xml 文件</span></span><br><span class="line">            manifest.srcFile <span class="string">&#x27;src/xiaomi/AndroidManifest.xml&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        other &#123;</span><br><span class="line">            <span class="comment">// 指定另一个风味特定的 AndroidManifest.xml 文件</span></span><br><span class="line">            manifest.srcFile <span class="string">&#x27;src/other/AndroidManifest.xml&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="src-main-AndroidManifest-xml（公用配置）"><a href="#src-main-AndroidManifest-xml（公用配置）" class="headerlink" title="src&#x2F;main&#x2F;AndroidManifest.xml（公用配置）"></a>src&#x2F;main&#x2F;AndroidManifest.xml（公用配置）</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">&quot;com.example.app&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 公用配置项 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- ... --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="src-xiaomi-AndroidManifest-xml（风味特定配置）"><a href="#src-xiaomi-AndroidManifest-xml（风味特定配置）" class="headerlink" title="src&#x2F;xiaomi&#x2F;AndroidManifest.xml（风味特定配置）"></a>src&#x2F;xiaomi&#x2F;AndroidManifest.xml（风味特定配置）</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">&quot;com.example.app&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 风味特定配置项 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- ... --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="src-other-AndroidManifest-xml（另一个风味特定配置）"><a href="#src-other-AndroidManifest-xml（另一个风味特定配置）" class="headerlink" title="src&#x2F;other&#x2F;AndroidManifest.xml（另一个风味特定配置）"></a>src&#x2F;other&#x2F;AndroidManifest.xml（另一个风味特定配置）</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">xmlCopy code</span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">&quot;com.example.app&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 另一个风味特定配置项 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- ... --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在这个示例中，我们在 <code>sourceSets</code> 中分别为 <code>xiaomi</code> 和 <code>other</code> 风味指定了不同的 <code>AndroidManifest.xml</code> 文件。每个风味的配置将会覆盖默认的 <code>main</code> 文件夹下的 <code>AndroidManifest.xml</code> 文件中相应的部分。</p><p>通过这种方式，可以灵活地管理不同风味的配置，并确保风味特定的配置能够正确地被应用，同时保留公用的配置。可以实际需求进行相应的调整和定制。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>在 <code>sourceSets</code> 中使用 <code>manifest.srcFile</code> 可以将风味特定的 <code>AndroidManifest.xml</code> 文件替换默认的清单文件。</p><p>如果在指定的风味特定清单文件中未定义的部分，将会从 <code>main</code> 文件夹下的默认 <code>AndroidManifest.xml</code> 文件进行合并。</p><p>针对风味特定的配置，将配置放在 <code>xiaomi</code> 或 <code>other</code> 文件夹下的风味特定 <code>AndroidManifest.xml</code> 文件中。</p><p>对于公用配置，保留在 <code>main</code> 文件夹下的默认 <code>AndroidManifest.xml</code> 文件中。</p><p>再说一下 <code>sourceSets</code>的常用配置，具体看下面代码示例</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">android &#123;</span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    productFlavors &#123;</span><br><span class="line">        xiaomi &#123;</span><br><span class="line">            <span class="comment">// xiaomi的配置</span></span><br><span class="line">        &#125;</span><br><span class="line">        other &#123;</span><br><span class="line">            <span class="comment">// other的配置</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 更多风味...</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sourceSets &#123;</span><br><span class="line">        xiaomi &#123;</span><br><span class="line">            <span class="comment">// 这里指定xiaomi的源代码和资源路径</span></span><br><span class="line">          java.srcDirs = [<span class="string">&#x27;src/xiaomi/java&#x27;</span>]</span><br><span class="line">          res.srcDirs = [<span class="string">&#x27;src/xiaomi/res&#x27;</span>]</span><br><span class="line">          assets.srcDirs = [<span class="string">&#x27;src/xiaomi/assets&#x27;</span>]</span><br><span class="line">            manifest.srcFile <span class="string">&#x27;src/xiaomi/AndroidManifest.xml&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        other &#123;</span><br><span class="line">            <span class="comment">// 这里指定other的源代码和资源路径</span></span><br><span class="line">          java.srcDirs = [<span class="string">&#x27;src/xiaomi/java&#x27;</span>]</span><br><span class="line">          res.srcDirs = [<span class="string">&#x27;src/other/res&#x27;</span>]</span><br><span class="line">          assets.srcDirs = [<span class="string">&#x27;src/other/assets&#x27;</span>]</span><br><span class="line">            manifest.srcFile <span class="string">&#x27;src/other/AndroidManifest.xml&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 更多风味...</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> AndroidManifest </category>
          
          <category> sourceSets </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> AndroidManifest </tag>
            
            <tag> sourceSets </tag>
            
            <tag> productFlavors </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【自定义 View】相机预览点击聚焦框(带对焦动画，曝光调整)</title>
      <link href="/post/779b2eb0.html"/>
      <url>/post/779b2eb0.html</url>
      
        <content type="html"><![CDATA[<p><img style='width: auto;    max-width: 100%;    border-radius: 12px;    display: block;    margin: 20px auto;    object-fit: contain;    box-shadow: 2px 4px 7px #999;' src='https://bu.dusays.com/2023/08/10/64d45dba73c3c.webp'><br>&emsp;&emsp;时隔十个月，今天再次来分享项目中使用到的自定义View，话不多说，直接开始，主要在相机预览的时候点击预览界面对焦时使用，并增加了对焦动画，可调节曝光。可以设置曝光的上限和下限，用于调整曝光时回调，点击后无操作5秒后隐藏。总的来说就是这些，下面开始上代码</p><h2 id="对焦框"><a href="#对焦框" class="headerlink" title="对焦框"></a>对焦框</h2><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onMeasure</span><span class="params">(widthMeasureSpec: <span class="type">Int</span>, heightMeasureSpec: <span class="type">Int</span>)</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.onMeasure(widthMeasureSpec, heightMeasureSpec)</span><br><span class="line">    <span class="keyword">val</span> width = MeasureSpec.getSize(widthMeasureSpec)</span><br><span class="line">    <span class="keyword">val</span> height = MeasureSpec.getSize(heightMeasureSpec)</span><br><span class="line">    frameRadius = width / <span class="number">5f</span></span><br><span class="line">    frameRectF.left = (width / <span class="number">2f</span>) - frameRadius</span><br><span class="line">    frameRectF.right = (width / <span class="number">2f</span>) + frameRadius</span><br><span class="line">    frameRectF.top = (height / <span class="number">2f</span>) - frameRadius</span><br><span class="line">    frameRectF.bottom = (height / <span class="number">2f</span>) + frameRadius</span><br><span class="line">    _14 = frameRectF.height() / <span class="number">4f</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onDraw</span><span class="params">(canvas: <span class="type">Canvas</span>?)</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.onDraw(canvas)</span><br><span class="line">    canvas?.apply &#123;</span><br><span class="line">        <span class="keyword">val</span> points = floatArrayOf(</span><br><span class="line">        frameRectF.left, frameRectF.top, frameRectF.left, frameRectF.top + _14,</span><br><span class="line">        frameRectF.left, frameRectF.top, frameRectF.left + _14, frameRectF.top,</span><br><span class="line">        frameRectF.left, frameRectF.bottom, frameRectF.left, frameRectF.bottom - _14,</span><br><span class="line">        frameRectF.left, frameRectF.bottom, frameRectF.left + _14, frameRectF.bottom,</span><br><span class="line">        frameRectF.right, frameRectF.top, frameRectF.right, frameRectF.top + _14,</span><br><span class="line">        frameRectF.right, frameRectF.top, frameRectF.right - _14, frameRectF.top,</span><br><span class="line">        frameRectF.right, frameRectF.bottom, frameRectF.right, frameRectF.bottom - _14,</span><br><span class="line">        frameRectF.right, frameRectF.bottom, frameRectF.right - _14, frameRectF.bottom)</span><br><span class="line">        drawLines(points, framePaint)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;这个对焦框显而易见，其实就是画了八条线，_14是用来控制边框线条的长度的，想要边框间距更近一些，就改成<br><code>_14 = frameRectF.height() / 3f</code></p><h2 id="小太阳"><a href="#小太阳" class="headerlink" title="小太阳"></a>小太阳</h2><h3 id="1-按住显示的直线"><a href="#1-按住显示的直线" class="headerlink" title="1.按住显示的直线"></a>1.按住显示的直线</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onDraw</span><span class="params">(canvas: <span class="type">Canvas</span>?)</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.onDraw(canvas)</span><br><span class="line">    canvas?.apply &#123;</span><br><span class="line">        <span class="comment">// 画直线</span></span><br><span class="line">        <span class="keyword">if</span> (showLine) &#123;</span><br><span class="line">            <span class="keyword">if</span> (circleY != circleRadius + dp8) &#123;</span><br><span class="line">                drawLine(centerOfCircle, <span class="number">0f</span>, centerOfCircle, (height * progress) - (circleRadius) - dp10, sunPaint)</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (circleY != height - (circleRadius) - dp8) &#123;</span><br><span class="line">                drawLine(centerOfCircle, (height * progress) + (circleRadius) + dp10, centerOfCircle, height * <span class="number">1f</span>, sunPaint)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SuppressLint(<span class="string">&quot;ClickableViewAccessibility&quot;</span>)</span></span><br><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onTouchEvent</span><span class="params">(event: <span class="type">MotionEvent</span>?)</span></span>: <span class="built_in">Boolean</span> &#123;</span><br><span class="line">    event?.let &#123; ev -&gt;</span><br><span class="line">        <span class="keyword">when</span> (ev.action) &#123;</span><br><span class="line">            MotionEvent.ACTION_DOWN -&gt; &#123;</span><br><span class="line">                <span class="keyword">if</span> (circleY &lt; <span class="number">0f</span>) &#123;</span><br><span class="line">                    circleY = height * progress</span><br><span class="line">                    lastCircleY = circleY</span><br><span class="line">                &#125;</span><br><span class="line">                posY = event.y</span><br><span class="line">                paintColor = Color.WHITE</span><br><span class="line">            &#125;</span><br><span class="line">            MotionEvent.ACTION_MOVE -&gt; &#123;</span><br><span class="line">                curPosY = event.y</span><br><span class="line">                paintColor = Color.WHITE</span><br><span class="line">                <span class="keyword">if</span> ((curPosY - posY &gt; <span class="number">0</span>) || (curPosY - posY &lt; <span class="number">0</span>)) &#123;</span><br><span class="line">                    showLine = <span class="literal">true</span></span><br><span class="line">                    invalidate()</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            MotionEvent.ACTION_UP, MotionEvent.ACTION_CANCEL -&gt; &#123;</span><br><span class="line">                showLine = <span class="literal">false</span></span><br><span class="line">                invalidate()</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> -&gt; &#123;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;直线受<code>showLine</code>影响显示或隐藏，<code>showLine</code>会在手指移动的时候会修改为<code>true</code>，这个时候就会显示小太阳后的直线；<code>circleY</code>是记录小太阳y轴的位置，而<code>(circleY != circleRadius + dp8)</code>是用来判断当前小太阳是否处于最上方，如果不是的话，就会绘制小太阳上方的直线，<code>(circleY != height - (circleRadius) - dp8)</code>同理，判断是否处于最下方。</p><h3 id="2-小太阳外部"><a href="#2-小太阳外部" class="headerlink" title="2.小太阳外部"></a>2.小太阳外部</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onDraw</span><span class="params">(canvas: <span class="type">Canvas</span>?)</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.onDraw(canvas)</span><br><span class="line">    canvas?.apply &#123;</span><br><span class="line">        <span class="comment">// 画圆,空心圆</span></span><br><span class="line">        drawCircle(centerOfCircle, height * progress, circleRadius, sunPaint)</span><br><span class="line">        <span class="comment">// 画线条</span></span><br><span class="line">        <span class="keyword">for</span> (i <span class="keyword">in</span> <span class="number">0</span> until <span class="number">8</span>) &#123;</span><br><span class="line">            <span class="keyword">val</span> startPointF = calculationPoint(angle - (i * <span class="number">45f</span>), circleRadius + dp3)</span><br><span class="line">            <span class="keyword">val</span> endPointF = calculationPoint(angle - (i * <span class="number">45f</span>), circleRadius + dp5)</span><br><span class="line">            borderWidth = <span class="number">5f</span></span><br><span class="line">            sunPaint.strokeWidth = borderWidth</span><br><span class="line">            canvas.drawLine(startPointF.x, startPointF.y, endPointF.x, endPointF.y, sunPaint)</span><br><span class="line">            borderWidth = <span class="number">3f</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 计算圆上任意点的坐标</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> angle 角度</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> radius 半径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 点坐标</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">fun</span> <span class="title">calculationPoint</span><span class="params">(angle: <span class="type">Float</span>, radius: <span class="type">Float</span>)</span></span>: PointF &#123;</span><br><span class="line">    <span class="keyword">val</span> x = (centerOfCircle) + (radius) * cos(angle * Math.PI / <span class="number">180f</span>).toFloat()</span><br><span class="line">    <span class="keyword">val</span> y = (height * progress) + (radius) * sin(angle * Math.PI / <span class="number">180f</span>).toFloat()</span><br><span class="line">    <span class="keyword">return</span> PointF(x, y)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;画空心圆没啥好说的，<code>height * progress</code>其实意义上也就是<code>circleY</code>。至于小太阳上下滑动外部线条也跟着转是不断改变<code>angle</code>，从线条最上面移动到最下面，就是从0到360的变化。不断的改变角度，达到根据手指移动旋转的效果。</p><h3 id="3-小太阳内部"><a href="#3-小太阳内部" class="headerlink" title="3.小太阳内部"></a>3.小太阳内部</h3><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onDraw</span><span class="params">(canvas: <span class="type">Canvas</span>?)</span></span> &#123;</span><br><span class="line">    <span class="keyword">super</span>.onDraw(canvas)</span><br><span class="line">    canvas?.apply &#123;</span><br><span class="line">        <span class="comment">// 画中间月亮效果</span></span><br><span class="line">        <span class="keyword">if</span> (realProcess &lt; <span class="number">.5f</span>) &#123;</span><br><span class="line">            <span class="comment">// 张弦月</span></span><br><span class="line">            <span class="keyword">val</span> left = centerOfCircle - (((circleRadius - dp2) * <span class="number">2f</span>) * abs(realProcess - <span class="number">0.5f</span>))</span><br><span class="line">            <span class="keyword">val</span> top = (height * progress) - (circleRadius - dp2)</span><br><span class="line">            <span class="keyword">val</span> right = centerOfCircle + (((circleRadius - dp2) * <span class="number">2f</span>) * abs(realProcess - <span class="number">0.5f</span>))</span><br><span class="line">            <span class="keyword">val</span> bottom = (height * progress) + (circleRadius - dp2)</span><br><span class="line">            drawOval(left, top, right, bottom, moonPaint)</span><br><span class="line">            drawArc(centerOfCircle - (circleRadius - dp2), (height * progress) - (circleRadius - dp2),</span><br><span class="line">                centerOfCircle + (circleRadius - dp2), (height * progress) + (circleRadius - dp2),</span><br><span class="line">                <span class="number">90f</span>, <span class="number">180f</span>, <span class="literal">false</span>, moonPaint)</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (realProcess == <span class="number">.5f</span>) &#123;</span><br><span class="line">            <span class="comment">// 下弦月</span></span><br><span class="line">            drawArc(centerOfCircle - (circleRadius - dp2), (height * progress) - (circleRadius - dp2),</span><br><span class="line">                centerOfCircle + (circleRadius - dp2), (height * progress) + (circleRadius - dp2),</span><br><span class="line">                <span class="number">90f</span>, <span class="number">180f</span>, <span class="literal">false</span>, moonPaint)</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 残月</span></span><br><span class="line">            <span class="keyword">val</span> save = saveLayer(<span class="literal">null</span>, <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">val</span> left = centerOfCircle - (((circleRadius - dp2) * <span class="number">2f</span>) * abs(realProcess - <span class="number">0.5f</span>))</span><br><span class="line">            <span class="keyword">val</span> top = (height * progress) - (circleRadius - dp2)</span><br><span class="line">            <span class="keyword">val</span> right = centerOfCircle + (((circleRadius - dp2) * <span class="number">2f</span>) * abs(realProcess - <span class="number">0.5f</span>))</span><br><span class="line">            <span class="keyword">val</span> bottom = (height * progress) + (circleRadius - dp2)</span><br><span class="line">            drawArc(centerOfCircle - (circleRadius - dp2 - <span class="number">1</span>), (height * progress) - (circleRadius - dp2 - <span class="number">1</span>),</span><br><span class="line">                centerOfCircle + (circleRadius - dp2 - <span class="number">1</span>), (height * progress) + (circleRadius - dp2 - <span class="number">1</span>),</span><br><span class="line">                <span class="number">90f</span>, <span class="number">180f</span>, <span class="literal">false</span>, moonPaint)</span><br><span class="line">            moonPaint.xfermode = porterDuffDstOut</span><br><span class="line">            drawOval(left, top, right, bottom, moonPaint)</span><br><span class="line">            moonPaint.xfermode = <span class="literal">null</span></span><br><span class="line">            restoreToCount(save)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;小太阳中间的月亮效果是参考了<a href="https://juejin.cn/post/7006142194230755341">蹭中秋热度来了~Android 自定义View——月有阴晴圆缺</a>这个文章，感兴趣的可以去看一下。总的来说，这个月亮主要分为三个部分，残月 &gt; 下弦月 &gt; 张弦月。</p><p>&emsp;&emsp;残月和张弦月的原理是画了一个下弦月，在下弦月的基础上，再画一个椭圆，这个椭圆是高度和下弦月相同，宽度动态向两边延伸的。椭圆的效果如下：</p><p><img style='width: auto;    max-width: 100%;    border-radius: 12px;    display: block;    margin: 20px auto;    object-fit: contain;    box-shadow: 2px 4px 7px #999;' src='https://bu.dusays.com/2023/08/10/64d45e210e7ce.gif'></p><p>&emsp;&emsp;这里放大了整个View，也是为了更加直观的看到椭圆的变化。看到这里就可以明白张弦月其实就是这个椭圆和下弦月叠放在一起的效果，那残月是如何实现的呢，这里用到了<code>PorterDuffXfermode</code>，对于<code>PorterDuffXfermode</code>不了解的可以看下Google的<a href="https://developer.android.com/reference/android/graphics/PorterDuff.Mode.html">官方文档</a>，文章中用到的是<code>DST_OUT</code>，效果如图：</p><p><img style='width: auto;    max-width: 100%;    border-radius: 12px;    display: block;    margin: 20px auto;    object-fit: contain;    box-shadow: 2px 4px 7px #999;' src='https://bu.dusays.com/2023/08/10/64d45dba39688.png'></p><p>&emsp;&emsp;使用<code>PorterDuff.Mode.DST_OUT</code>将可变化的椭圆和下弦月叠放在一起就实现了残月的效果。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>&emsp;&emsp;到这里就结束了，那么如何使用呢，代码如下，首先是xml：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span><br><span class="line">    xmlns:app=<span class="string">&quot;http://schemas.android.com/apk/res-auto&quot;</span></span><br><span class="line">    xmlns:tools=<span class="string">&quot;http://schemas.android.com/tools&quot;</span></span><br><span class="line">    android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">    tools:context=<span class="string">&quot;.MainActivity&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line">    &lt;View</span><br><span class="line">        android:id=<span class="string">&quot;@+id/preview_view&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;match_parent&quot;</span></span><br><span class="line">        android:background=<span class="string">&quot;@color/black&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">    &lt;com.lazyiones.focussunview.FocusSunView</span><br><span class="line">        android:id=<span class="string">&quot;@+id/focus_sun_view&quot;</span></span><br><span class="line">        android:layout_width=<span class="string">&quot;120dp&quot;</span></span><br><span class="line">        android:layout_height=<span class="string">&quot;140dp&quot;</span></span><br><span class="line">        android:visibility=<span class="string">&quot;invisible&quot;</span></span><br><span class="line">        app:layout_constraintStart_toStartOf=<span class="string">&quot;@+id/preview_view&quot;</span></span><br><span class="line">        app:layout_constraintTop_toTopOf=<span class="string">&quot;@+id/preview_view&quot;</span> /&gt;</span><br><span class="line"></span><br><span class="line">&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;这里一定要把<code>visibility</code>设置为<code>invisible</code>，不然第一次显示无法正常处理宽高，对焦框显示的位置会偏离，<code>preview_view</code>顾名思义就是预览的View。下面是Activity中：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">val</span> focusSunView = findViewById&lt;FocusSunView&gt;(R.id.focus_sun_view)</span><br><span class="line"></span><br><span class="line">findViewById&lt;View&gt;(R.id.preview_view).setOnTouchListener &#123; _, motionEvent -&gt;</span><br><span class="line">    <span class="keyword">when</span> (motionEvent.action) &#123;</span><br><span class="line">        MotionEvent.ACTION_DOWN -&gt; &#123;</span><br><span class="line">            focusSunView.visibility = View.VISIBLE</span><br><span class="line">            focusSunView.translationX = motionEvent.x - (focusSunView.width / <span class="number">2f</span>)</span><br><span class="line">            focusSunView.translationY = motionEvent.y - (focusSunView.height / <span class="number">2f</span>)</span><br><span class="line">            focusSunView.startCountdown()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span><span class="symbol">@setOnTouchListener</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">focusSunView.setOnExposureChangeListener(<span class="keyword">object</span> : FocusSunView.OnExposureChangeListener &#123;</span><br><span class="line">    <span class="keyword">override</span> <span class="function"><span class="keyword">fun</span> <span class="title">onExposureChangeListener</span><span class="params">(exposure: <span class="type">Float</span>)</span></span> &#123;</span><br><span class="line">        <span class="comment">// 处理相机曝光</span></span><br><span class="line">        Log.e(<span class="string">&quot;FocusSunView&quot;</span>, <span class="string">&quot;onExposureChangeListener: -----------&gt; <span class="variable">$exposure</span>&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>&emsp;&emsp;OK，大致就是这样，有写的不好的地方欢迎指正。</p><h2 id="源码地址"><a href="#源码地址" class="headerlink" title="源码地址"></a>源码地址</h2><p><a href="https://github.com/LazyIonEs/FocusSunView.git">FocusSunView</a></p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> 自定义View </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> 自定义View </tag>
            
            <tag> 相机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>仿墨迹24小时天气自定义View</title>
      <link href="/post/7482f6f9.html"/>
      <url>/post/7482f6f9.html</url>
      
        <content type="html"><![CDATA[<h2 id="先看墨迹天气效果图"><a href="#先看墨迹天气效果图" class="headerlink" title="先看墨迹天气效果图"></a>先看墨迹天气效果图</h2><p><img src="https://bu.dusays.com/2023/08/10/64d43fec59021.webp" alt="5506445253_63249103744_1656936370197_694x449.gif"></p><p>因为需求原因，改了一些样式</p><p><img src="https://bu.dusays.com/2023/08/10/64d43febdc2a0.webp" alt="5506445253_63339371021_1657021325668_687x425.gif"></p><h2 id="平滑的线"><a href="#平滑的线" class="headerlink" title="平滑的线"></a>平滑的线</h2><p>话不多说，直接开始，首先是画出这条曲线，找到每个小时温度对应点位，连成一条线，左边显示最高温度和最低温度，最高温度对应曲线中的最高点，最低温度对应曲线中的最低点，直接上代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Point <span class="title function_">calculateTempPoint</span><span class="params">(<span class="type">int</span> left, <span class="type">int</span> right, <span class="type">int</span> temp)</span> &#123;</span><br><span class="line">    <span class="type">double</span> <span class="variable">minHeight</span> <span class="operator">=</span> tempBaseTop;</span><br><span class="line">    <span class="type">double</span> <span class="variable">maxHeight</span> <span class="operator">=</span> tempBaseBottom;</span><br><span class="line">    <span class="type">double</span> <span class="variable">tempY</span> <span class="operator">=</span> maxHeight - (temp - minTemp) * <span class="number">1.0</span> / (maxTemp - minTemp) * (maxHeight - minHeight);</span><br><span class="line">    <span class="type">Point</span> <span class="variable">point</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Point</span>((left + right) / <span class="number">2</span>, (<span class="type">int</span>) tempY);</span><br><span class="line">    <span class="keyword">return</span> point;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>传入点的左边距，右边距和这个时间段对应的温度，返回一个Point类，Point类中有x，y两个属性，构造方法如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">Point</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.x = x;</span><br><span class="line">    <span class="built_in">this</span>.y = y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>tempBaseTop</code>和<code>tempBaseBottom</code>是在初始化中按高度比例来分</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tempBaseTop = (mHeight - bottomTextHeight) / <span class="number">3</span>;</span><br><span class="line">tempBaseBottom = (mHeight - bottomTextHeight) * <span class="number">3</span> / <span class="number">4</span>;</span><br></pre></td></tr></table></figure><p><code>bottomTextHeight</code>是下方数字文本高度<br>获取每个温度对应的坐标轴之前，先拿到24小时天气数据中的最高温和最低温，这样就能确定每个点位的距离y轴的坐标。拿到24个坐标点后，直接来第一步，画出曲线，直接上代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Path</span> <span class="variable">path</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Path</span>();</span><br><span class="line"><span class="type">Point</span> <span class="variable">point0</span> <span class="operator">=</span> listItems.get(<span class="number">0</span>).getTempPoint();</span><br><span class="line">path.moveTo(point0.x, point0.y);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; listItems.size(); i++) &#123;</span><br><span class="line">    <span class="type">Point</span> <span class="variable">point</span> <span class="operator">=</span> listItems.get(i).getTempPoint();</span><br><span class="line">    <span class="keyword">if</span> (i != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="type">Point</span> <span class="variable">pointPre</span> <span class="operator">=</span> listItems.get(i - <span class="number">1</span>).getTempPoint();</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">1</span>) &#123;</span><br><span class="line">            path.lineTo(point.x, point.y);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            path.rLineTo(point.x - pointPre.x, point.y - pointPre.y);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">canvas.drawPath(path, linePaint);</span><br></pre></td></tr></table></figure><p>直接<code>new</code>一个<code>Path</code>，使用<code>moveTo</code>方法移动到第一个点位，然后直接<code>for</code>循环，第一个点不画，从1开始，直接<code>lineTo</code>到指定的x，y坐标，这里第一条线使用了<code>lineTo</code>，后面都是用的<code>rLineTo</code>，也就是从上一条线的最终点开始画，就不需要频繁的<code>moveTo</code>了。本来打算使用三阶贝塞尔曲线画的，画出来之后发现每条线的连接处有很明显的折角，不平滑，可能是我用的方法不对，有明白的可以跟我说说，三阶贝塞尔画出来的就像下面这样</p><p><img src="https://bu.dusays.com/2023/08/10/64d43feaa89d4.webp" alt="5506445253_63262601417_IMG_20220705_085830.jpg"><br>再看下使用画直线的方式画出来的效果</p><p><img src="https://bu.dusays.com/2023/08/10/64d43fe98d6e5.webp" alt="5506445253_63264419320_IMG_20220705_091358.jpg"><br>看的出来，这种短而坡度小的线，效果不是很大，就是更直了一点，然后我们再给<code>Paint</code>设置<code>PathEffect</code>试试效果，代码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">PathEffect</span> <span class="variable">pathEffect</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CornerPathEffect</span>(<span class="number">180</span>);</span><br><span class="line">linePaint.setPathEffect(pathEffect);</span><br></pre></td></tr></table></figure><p><code>CornerPathEffect</code>的作用是通过将线段之间的任何锐角替换为指定半径的圆角来转换绘制的几何图形（<code>STROKE</code> 或 <code>FILL</code> 样式）。参数：半径 - 线段之间的圆角</p><p><img src="https://bu.dusays.com/2023/08/10/64d43fe98a87c.webp" alt="5506445253_63268350797_IMG_20220705_094126.jpg"><br>是不是平滑了很多。</p><h2 id="天气Icon背景框"><a href="#天气Icon背景框" class="headerlink" title="天气Icon背景框"></a>天气Icon背景框</h2><p>曲线结束之后先画出每个天气icon所在的矩形框，每个矩形框之间都有一定的缝隙，直接上代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Point</span> <span class="variable">point0</span> <span class="operator">=</span> listItems.get(<span class="number">0</span>).tempPoint;</span><br><span class="line"><span class="type">Path</span> <span class="variable">pathBG</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Path</span>();</span><br><span class="line">pathBG.moveTo(point0.x, point0.y);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; listItems.size(); i++) &#123;</span><br><span class="line">    <span class="type">Point</span> <span class="variable">point</span> <span class="operator">=</span> listItems.get(i).getTempPoint();</span><br><span class="line">    <span class="keyword">if</span> (i != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="type">Point</span> <span class="variable">pointPre</span> <span class="operator">=</span> listItems.get(i - <span class="number">1</span>).getTempPoint();</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">1</span>) &#123;</span><br><span class="line">            pathBG.lineTo(point.x, point.y);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (listItems.get(i).getIcon() != -<span class="number">1</span>)</span><br><span class="line">                pathBG.rLineTo(point.x - pointPre.x - DisplayUtil.dip2px(getContext(), <span class="number">1</span>), point.y - pointPre.y);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                pathBG.rLineTo(point.x - pointPre.x, point.y - pointPre.y);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">Point</span> <span class="variable">pointBackup</span> <span class="operator">=</span> listItems.get(<span class="number">0</span>).getTempPoint();</span><br><span class="line">        <span class="keyword">if</span> (listItems.get(i).getIcon() != -<span class="number">1</span> || (getGoneBehind(i) &amp;&amp; i == listItems.size() - <span class="number">1</span>)) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; i; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (listItems.get(j).getIcon() != -<span class="number">1</span>) &#123;</span><br><span class="line">                    pointBackup = listItems.get(j).getTempPoint();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (listItems.get(i).getTempPoint() != pointBackup) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> mHeight - bottomTextHeight - DisplayUtil.dip2px(getContext(), <span class="number">4</span>) - point.y;</span><br><span class="line">                pathBG.rLineTo(<span class="number">0</span>, height);</span><br><span class="line">                pathBG.rLineTo(pointBackup.x - point.x + DisplayUtil.dip2px(getContext(), <span class="number">1</span>), <span class="number">0</span>);</span><br><span class="line">                canvas.drawPath(pathBG, rectPaint);</span><br><span class="line">                pathBG.reset();</span><br><span class="line">                <span class="comment">//移到新的点开始画</span></span><br><span class="line">                pathBG.moveTo(point.x, point.y);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">getGoneBehind</span><span class="params">(<span class="type">int</span> index)</span> &#123;</span><br><span class="line">    List&lt;Boolean&gt; data = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> index; k &lt; listItems.size(); k++) &#123;</span><br><span class="line">        data.add(listItems.get(k).res == -<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> !data.contains(<span class="literal">false</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里前面和画曲线一样，原理就是先画出一个天气icon所在的矩形框上方的曲线，然后从曲线的末端向下画一条直线，在向左画至矩形框的左边界，然后封闭起来。可以看到这里面有很多<code>getIcon() != -1</code>的判断，这些是在塞数据的时候判断当前时间段的<code>icon</code>是否和上一个一样，一样的话就把<code>icon</code>替换成-1，代码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">icon</span> <span class="operator">=</span> list.get(<span class="number">0</span>).getIcon();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (i != <span class="number">0</span> &amp;&amp; icon == list.get(i).getIcon()) &#123;</span><br><span class="line">        list.get(i).setIcon(-<span class="number">1</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        icon = list.get(i).getIcon();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于每个矩形中间需要间隙，就在顶部和底部的线时减去了<code>1dp</code>，代码中可以看到除了画曲线外只画了两条线，但是却实现了填充矩形的效果，这个是因为我给<code>rectPaint</code>设置了<code>Style</code>时传入的属性是<code>Paint.Style.FILL</code>，设置<code>FILL</code>属性后，三角形只需要画出两条线就可自动封闭，矩形画出三条线，如果不方便使用<code>FILL</code>属性的话，可以使用Path提供的方法，<code>path.close();</code>，效果等同于<code>FILL</code>，封闭矩形后使用<code>path.reset();</code>清除路径中的所有线条和曲线，然后移动到下一个开始画曲线的点，循环下去，看一下效果</p><p><img src="https://bu.dusays.com/2023/08/10/64d43fe986a2f.webp" alt="5506445253_63317592872_IMG_20220705_162537.jpg"></p><h2 id="天气Icon"><a href="#天气Icon" class="headerlink" title="天气Icon"></a>天气Icon</h2><p>矩形结束之后就是天气icon了。在看一下墨迹天气的效果图<br><img src="https://bu.dusays.com/2023/08/10/64d43fec59021.webp" alt="5506445253_63249103744_1656936370197_694x449.gif"></p><p>从图中可以看到，天气的<code>icon</code>是在每个矩形的正中间，随着手指的滑动，最左边的<code>icon</code>所在的矩形如果被<code>view</code>的左边界盖住，矩形中的<code>icon</code>保持在<code>view</code>的左边界和矩形的右边界中间，最右边同理。代码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; listItems.size(); i++) &#123;</span><br><span class="line">    <span class="type">Point</span> <span class="variable">point</span> <span class="operator">=</span> listItems.get(i).getTempPoint();</span><br><span class="line">    <span class="keyword">if</span> (i != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="type">Point</span> <span class="variable">pointBackup</span> <span class="operator">=</span> listItems.get(<span class="number">0</span>).getTempPoint();</span><br><span class="line">        <span class="keyword">if</span> (listItems.get(i).getIcon() != -<span class="number">1</span> || (getGoneBehind(i) &amp;&amp; i == listItems.size() - <span class="number">1</span>)) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">icon</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">            <span class="type">int</span> <span class="variable">indexBackUp</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; i; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (listItems.get(j).getIcon() != -<span class="number">1</span>) &#123;</span><br><span class="line">                    icon = listItems.get(j).getIcon();</span><br><span class="line">                    indexBackUp = j;</span><br><span class="line">                    pointBackup = listItems.get(j).getTempPoint();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (listItems.get(i).getTempPoint() != pointBackup) &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> (point.x - pointBackup.x) / <span class="number">2</span> + pointBackup.x - DisplayUtil.dip2px(getContext(), <span class="number">10</span>);</span><br><span class="line">                <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> (point.x - pointBackup.x) / <span class="number">2</span> + pointBackup.x + DisplayUtil.dip2px(getContext(), <span class="number">10</span>);</span><br><span class="line">                <span class="type">int</span> <span class="variable">newLeft</span> <span class="operator">=</span> (point.x - (pointBackup.x - getItemLeftMargin(indexBackUp))) / <span class="number">2</span> + (pointBackup.x - getItemLeftMargin(indexBackUp));</span><br><span class="line">                <span class="type">int</span> <span class="variable">newRight</span> <span class="operator">=</span> ((point.x + getItemRightMargin(i)) - pointBackup.x) / <span class="number">2</span> + pointBackup.x;</span><br><span class="line">                <span class="keyword">if</span> (getItemLeftMargin(indexBackUp) &lt; <span class="number">0</span> &amp;&amp; newLeft + DisplayUtil.dip2px(getContext(), <span class="number">20</span>) &lt; point.x &amp;&amp; i - indexBackUp &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                    left = newLeft - DisplayUtil.dip2px(getContext(), <span class="number">10</span>);</span><br><span class="line">                    right = left + DisplayUtil.dip2px(getContext(), <span class="number">20</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (getItemLeftMargin(indexBackUp) &lt; <span class="number">0</span> &amp;&amp; newLeft + DisplayUtil.dip2px(getContext(), <span class="number">40</span>) &gt;= point.x &amp;&amp; i - indexBackUp &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                    left = point.x - DisplayUtil.dip2px(getContext(), <span class="number">30</span>);</span><br><span class="line">                    right = left + DisplayUtil.dip2px(getContext(), <span class="number">20</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (getItemRightMargin(i) &lt; <span class="number">0</span> &amp;&amp; newRight &gt; pointBackup.x + DisplayUtil.dip2px(getContext(), <span class="number">10</span>) &amp;&amp; i - indexBackUp &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                    right = newRight + DisplayUtil.dip2px(getContext(), <span class="number">10</span>);</span><br><span class="line">                    left = right - DisplayUtil.dip2px(getContext(), <span class="number">20</span>);</span><br><span class="line">                &#125;                            </span><br><span class="line">                <span class="keyword">if</span> (getItemLeftMargin(indexBackUp) &lt; <span class="number">0</span> &amp;&amp; getItemRightMargin(i) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                     left = pointBackup.x - getItemLeftMargin(indexBackUp) + scrollWidth / <span class="number">2</span> - DisplayUtil.dip2px(getContext(), <span class="number">10</span>);</span><br><span class="line">                     right = left + DisplayUtil.dip2px(getContext(), <span class="number">20</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="type">Drawable</span> <span class="variable">drawable</span> <span class="operator">=</span> ContextCompat.getDrawable(getContext(), icon);</span><br><span class="line">                drawable.setBounds(left,</span><br><span class="line">                        tempBaseBottom + DisplayUtil.dip2px(getContext(), <span class="number">5</span>),</span><br><span class="line">                        right,</span><br><span class="line">                        tempBaseBottom + DisplayUtil.dip2px(getContext(), <span class="number">25</span>));</span><br><span class="line">                drawable.draw(canvas);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先就是拿到<code>icon</code>所在矩形上方曲线的起始点，记住起始点的下标，<code>x</code>，<code>y</code>和<code>icon</code>，<code>icon</code>所在矩形上方曲线结束点的<code>x</code>轴坐标减去<code>icon</code>所在矩形上方曲线起始点的x轴坐标就可以拿到这个矩形的宽，宽除2在加上<code>icon</code>所在矩形上方曲线结束点的x轴坐标就是矩形中间点距离左边的边距，默认icon的left和right是在中间点的基础上减去10dp和加上10dp。<br>然后就是判断当前<code>icon</code>所在的矩形左边界或者右边界是否超出<code>view</code>的边界，因为<code>newLeft</code>是随着手指滑动不断减小或者增加的，所以需要满足当前<code>icon</code>所在矩形的左边界超出<code>view</code>的边界，且左边界不能超过右边界，右边同理，需要注意的是，当前icon的矩形如果只占了一格，就不需要改变边界，一直保持在矩形的中间就好。除了这两种情况外还有一种情况，就是矩形两边都超出<code>view</code>的边界，这时就是让天气<code>icon</code>保持在<code>view</code>的正中间就好了。<br>那么如何拿到当前<code>icon</code>所在矩形上方曲线起始点距离<code>view</code>左边界的距离呢，代码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 点距离左边的位置</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span>  i </span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span>  </span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getItemLeftMargin</span><span class="params">(<span class="type">int</span> i)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> MARGIN_LEFT_ITEM + i * ITEM_WIDTH + ITEM_WIDTH / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">return</span> left - scrollOffset;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 点距离右边的位置</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> i</span></span><br><span class="line"><span class="comment">* <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getItemRightMargin</span><span class="params">(<span class="type">int</span> i)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> MARGIN_LEFT_ITEM + i * ITEM_WIDTH + ITEM_WIDTH / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">return</span> scrollWidth - (left - scrollOffset);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>MARGIN_LEFT_ITEM</code>：左边预留宽度<br><code>ITEM_WIDTH</code>：每个Item的宽度<br><code>scrollOffset</code>：滚动偏移量<br><code>scrollWidth</code>：<code>HorizontalScrollView</code>的宽度<br>左边界距离屏幕左边的编辑就是当前<code>icon</code>所在矩形上方曲线起始点的x轴减去滑动的偏移量，右边界距离右边就是<code>HorizontalScrollView</code>的宽度减去距离屏幕左边界的值<br>24小时天气自定义view是被另一个自定义View中包含的，它继承于<code>HorizontalScrollView</code>，需要修改的代码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onDraw</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">    <span class="built_in">super</span>.onDraw(canvas);</span><br><span class="line">    <span class="type">int</span> <span class="variable">offset</span> <span class="operator">=</span> computeHorizontalScrollOffset();</span><br><span class="line">    <span class="type">int</span> <span class="variable">maxOffset</span> <span class="operator">=</span> computeHorizontalScrollRange() - DisplayUtil.getScreenWidth(getContext());</span><br><span class="line">    <span class="keyword">if</span> (today24HourView != <span class="literal">null</span>) &#123;</span><br><span class="line">        today24HourView.setScrollOffset(offset, maxOffset, getWidth());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setToday24HourView</span><span class="params">(Today24HourView today24HourView)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.today24HourView = today24HourView;</span><br><span class="line">    invalidate();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>computeHorizontalScrollOffset（）</code>计算水平滚动条拇指在水平范围内的水平偏移量<br><code>computeHorizontalScrollRange（）</code>滚动视图的滚动范围是其所有子视图的总宽度</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置scrollerView的滚动条的位置，通过位置计算当前的时段</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setScrollOffset</span><span class="params">(<span class="type">int</span> offset, <span class="type">int</span> maxScrollOffset, <span class="type">int</span> scrollWidth)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.maxScrollOffset = maxScrollOffset;</span><br><span class="line">    <span class="built_in">this</span>.scrollWidth = scrollWidth;</span><br><span class="line">    scrollOffset = offset;</span><br><span class="line">    currentItemIndex = calculateItemIndex(offset);</span><br><span class="line">    invalidate();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>maxScrollOffset</code>：最大滚动距离<br><code>scrollWidth</code>：<code>HorizontalScrollView</code>的宽度<br><code>scrollOffset</code>：滚动偏移量<br>xml中代码如下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">com.weather.gorgeous.custom_view.IndexHorizontalScrollView</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:fadeScrollbars</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:scrollbars</span>=<span class="string">&quot;none&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">com.weather.gorgeous.custom_view.Today24HourView</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">com.weather.gorgeous.custom_view.IndexHorizontalScrollView</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2023/08/10/64d43fe9a3d89.webp" alt="5506445253_63324907904_1657012359644_687x218.gif"></p><h2 id="天气指针"><a href="#天气指针" class="headerlink" title="天气指针"></a>天气指针</h2><p>接下来就是当前天气指针了，就是根据手指滑动，向左或向右偏移，并且滑动到不同的item，改变指针中的内容，代码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">WeatherHoursModel</span> <span class="variable">item</span> <span class="operator">=</span> listItems.get(i);</span><br><span class="line"><span class="keyword">if</span> (currentItemIndex == i) &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">Y</span> <span class="operator">=</span> getTempBarY();</span><br><span class="line">    <span class="type">Rect</span> <span class="variable">targetRect</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Rect</span>(</span><br><span class="line">        getScrollBarX(),</span><br><span class="line">        Y - DisplayUtil.dip2px(getContext(), <span class="number">40</span>),</span><br><span class="line">        getScrollBarX() + DisplayUtil.dip2px(getContext(), <span class="number">92</span>),</span><br><span class="line">        Y - DisplayUtil.dip2px(getContext(), <span class="number">14</span>));</span><br><span class="line">    <span class="type">Drawable</span> <span class="variable">drawable</span> <span class="operator">=</span> ContextCompat.getDrawable(getContext(), R.drawable.bg_indicator_text);</span><br><span class="line">    drawable.setBounds(targetRect);</span><br><span class="line">    drawable.draw(canvas);</span><br><span class="line">    <span class="comment">//画出温度提示</span></span><br><span class="line">    Paint.<span class="type">FontMetricsInt</span> <span class="variable">fontMetrics</span> <span class="operator">=</span> textPaint.getFontMetricsInt();</span><br><span class="line">    <span class="type">int</span> <span class="variable">baseline</span> <span class="operator">=</span> (targetRect.bottom + targetRect.top - fontMetrics.bottom - fontMetrics.top) / <span class="number">2</span>;</span><br><span class="line">    textPaint.setTextAlign(Paint.Align.CENTER);</span><br><span class="line">    textPaint.setTextSize(DisplayUtil.sp2px(getContext(), <span class="number">10</span>));</span><br><span class="line">    canvas.drawText(TimeUtils.getDateHHmm(item.getTempStamp()) + <span class="string">&quot; &quot;</span> + item.getWeather() + <span class="string">&quot;  &quot;</span> + item.getTemperature() + <span class="string">&quot;°&quot;</span>, targetRect.centerX(), baseline, textPaint);</span><br><span class="line">    <span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> mHeight - bottomTextHeight - DisplayUtil.dip2px(getContext(), <span class="number">4</span>);</span><br><span class="line">    canvas.drawLine(targetRect.centerX(), targetRect.bottom + DisplayUtil.dip2px(getContext(), <span class="number">4</span>), targetRect.centerX(), height, indicatorLinePaint);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//计算温度提示文字的运动轨迹</span></span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getTempBarY</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> getScrollBarX();</span><br><span class="line">    <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> MARGIN_LEFT_ITEM;</span><br><span class="line">    <span class="type">Point</span> <span class="variable">startPoint</span> <span class="operator">=</span> <span class="literal">null</span>, endPoint;</span><br><span class="line">    <span class="type">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; ITEM_SIZE; i++) &#123;</span><br><span class="line">        sum += ITEM_WIDTH;</span><br><span class="line">        <span class="keyword">if</span> (x &lt; sum) &#123;</span><br><span class="line">            startPoint = listItems.get(i).getTempPoint();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (i + <span class="number">1</span> &gt;= ITEM_SIZE || startPoint == <span class="literal">null</span>)</span><br><span class="line">        <span class="keyword">return</span> listItems.get(ITEM_SIZE - <span class="number">1</span>).getTempPoint().y;</span><br><span class="line">    endPoint = listItems.get(i + <span class="number">1</span>).getTempPoint();</span><br><span class="line">    <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> MARGIN_LEFT_ITEM + i * ITEM_WIDTH;</span><br><span class="line">    <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> (<span class="type">int</span>) (startPoint.y + (x - left) * <span class="number">1.0</span> / ITEM_WIDTH * (endPoint.y - startPoint.y));</span><br><span class="line">    <span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getScrollBarX</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> (ITEM_SIZE - <span class="number">5</span>) * ITEM_WIDTH * scrollOffset / maxScrollOffset;</span><br><span class="line">    x = x + MARGIN_LEFT_ITEM;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://bu.dusays.com/2023/08/10/64d43fe9a0077.webp" alt="5506445253_63340840294_1657023135269_687x228.gif"></p><p>然后就是实现当前选中矩形改变颜色，这个很简单，代码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (pointBackup.x &lt; getScrollBarX() + DisplayUtil.dip2px(getContext(), <span class="number">46</span>) &amp;&amp; getScrollBarX() + DisplayUtil.dip2px(getContext(), <span class="number">46</span>) &lt; point.x) &#123;</span><br><span class="line">    rectPaint.setColor(Color.parseColor(<span class="string">&quot;#33FFFFFF&quot;</span>));</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    rectPaint.setColor(Color.parseColor(<span class="string">&quot;#1AFFFFFF&quot;</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>至于下面的时间字段，和左面的最高温和最低温就不写了，很简单，计算一下位置就行，有兴趣的复制下面完整代码</p><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><p><code>Today24HourView.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Today24HourView</span> <span class="keyword">extends</span> <span class="title class_">View</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">TAG</span> <span class="operator">=</span> <span class="string">&quot;Today24HourView&quot;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">ITEM_SIZE</span> <span class="operator">=</span> <span class="number">24</span>;  <span class="comment">//24小时</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> ITEM_WIDTH; <span class="comment">//每个Item的宽度</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> MARGIN_LEFT_ITEM; <span class="comment">//左边预留宽度</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> MARGIN_RIGHT_ITEM; <span class="comment">//右边预留宽度</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> bottomTextHeight;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> scrollWidth;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> mHeight, mWidth;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> tempBaseTop;  <span class="comment">//温度折线的上边Y坐标</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> tempBaseBottom; <span class="comment">//温度折线的下边Y坐标</span></span><br><span class="line">    <span class="keyword">private</span> Paint bitmapPaint, linePaint, rectPaint, indicatorLinePaint;</span><br><span class="line">    <span class="keyword">private</span> TextPaint textPaint;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;WeatherHoursModel&gt; listItems;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">maxScrollOffset</span> <span class="operator">=</span> <span class="number">0</span>;<span class="comment">//滚动条最长滚动距离</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">scrollOffset</span> <span class="operator">=</span> <span class="number">0</span>; <span class="comment">//滚动条偏移量</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">currentItemIndex</span> <span class="operator">=</span> <span class="number">0</span>; <span class="comment">//当前滚动的位置所对应的item下标</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> maxTemp;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> minTemp;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Today24HourView</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>(context, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Today24HourView</span><span class="params">(Context context, AttributeSet attrs)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>(context, attrs, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Today24HourView</span><span class="params">(Context context, AttributeSet attrs, <span class="type">int</span> defStyleAttr)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span> &#123;</span><br><span class="line">        MARGIN_LEFT_ITEM = DisplayUtil.dip2px(getContext(), <span class="number">2</span>);</span><br><span class="line">        MARGIN_RIGHT_ITEM = DisplayUtil.dip2px(getContext(), <span class="number">20</span>);</span><br><span class="line">        ITEM_WIDTH = DisplayUtil.dip2px(getContext(), <span class="number">30</span>);</span><br><span class="line">        bottomTextHeight = DisplayUtil.dip2px(getContext(), <span class="number">16</span>);</span><br><span class="line">        mWidth = MARGIN_LEFT_ITEM + MARGIN_RIGHT_ITEM + ITEM_SIZE * ITEM_WIDTH;</span><br><span class="line">        mHeight = DisplayUtil.dip2px(getContext(), <span class="number">140</span>);</span><br><span class="line">        tempBaseTop = (mHeight - bottomTextHeight) / <span class="number">3</span>;</span><br><span class="line">        tempBaseBottom = (mHeight - bottomTextHeight) * <span class="number">3</span> / <span class="number">4</span>;</span><br><span class="line">        listItems = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        initPaint();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">initPaint</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">        rectPaint = <span class="keyword">new</span> <span class="title class_">Paint</span>();</span><br><span class="line">        rectPaint.setColor(Color.parseColor(<span class="string">&quot;#1AFFFFFF&quot;</span>));</span><br><span class="line">        rectPaint.setAntiAlias(<span class="literal">true</span>);</span><br><span class="line">        rectPaint.setStyle(Paint.Style.FILL);</span><br><span class="line">        rectPaint.setStrokeCap(Paint.Cap.ROUND);</span><br><span class="line">        rectPaint.setStrokeJoin(Paint.Join.ROUND);</span><br><span class="line">        rectPaint.setStrokeWidth(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">PathEffect</span> <span class="variable">pathEffect</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CornerPathEffect</span>(<span class="number">180</span>);</span><br><span class="line">        linePaint = <span class="keyword">new</span> <span class="title class_">Paint</span>();</span><br><span class="line">        linePaint.setColor(Color.WHITE);</span><br><span class="line">        linePaint.setPathEffect(pathEffect);</span><br><span class="line">        linePaint.setAntiAlias(<span class="literal">true</span>);</span><br><span class="line">        linePaint.setStrokeCap(Paint.Cap.ROUND);</span><br><span class="line">        linePaint.setStrokeJoin(Paint.Join.ROUND);</span><br><span class="line">        linePaint.setStyle(Paint.Style.STROKE);</span><br><span class="line">        linePaint.setStrokeWidth(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line">        textPaint = <span class="keyword">new</span> <span class="title class_">TextPaint</span>();</span><br><span class="line">        textPaint.setColor(Color.WHITE);</span><br><span class="line">        textPaint.setAntiAlias(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        bitmapPaint = <span class="keyword">new</span> <span class="title class_">Paint</span>();</span><br><span class="line">        bitmapPaint.setAntiAlias(<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line">        indicatorLinePaint = <span class="keyword">new</span> <span class="title class_">Paint</span>();</span><br><span class="line">        indicatorLinePaint = <span class="keyword">new</span> <span class="title class_">Paint</span>();</span><br><span class="line">        indicatorLinePaint.setColor(Color.WHITE);</span><br><span class="line">        indicatorLinePaint.setAntiAlias(<span class="literal">true</span>);</span><br><span class="line">        indicatorLinePaint.setStrokeCap(Paint.Cap.ROUND);</span><br><span class="line">        indicatorLinePaint.setStyle(Paint.Style.STROKE);</span><br><span class="line">        indicatorLinePaint.setStrokeWidth(<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setHourItems</span><span class="params">(List&lt;WeatherHoursModel&gt; listItems)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.listItems.clear();</span><br><span class="line">        List&lt;WeatherHoursModel&gt; list = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;(listItems);</span><br><span class="line">        maxTemp = list.get(<span class="number">0</span>).getTemperature();</span><br><span class="line">        minTemp = list.get(<span class="number">0</span>).getTemperature();</span><br><span class="line">        <span class="keyword">for</span> (WeatherHoursModel listItem : list) &#123;</span><br><span class="line">            <span class="keyword">if</span> (listItem.getTemperature() &gt; maxTemp)</span><br><span class="line">                maxTemp = listItem.getTemperature();</span><br><span class="line">            <span class="keyword">if</span> (listItem.getTemperature() &lt; minTemp)</span><br><span class="line">                minTemp = listItem.getTemperature();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">icon</span> <span class="operator">=</span> list.get(<span class="number">0</span>).getIcon();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> MARGIN_LEFT_ITEM + i * ITEM_WIDTH;</span><br><span class="line">            <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> left + ITEM_WIDTH;</span><br><span class="line">            <span class="type">Point</span> <span class="variable">point</span> <span class="operator">=</span> calculateTempPoint(left, right, list.get(i).getTemperature());</span><br><span class="line">            <span class="keyword">if</span> (i != <span class="number">0</span> &amp;&amp; icon == list.get(i).getIcon()) &#123;</span><br><span class="line">                list.get(i).setIcon(-<span class="number">1</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                icon = list.get(i).getIcon();</span><br><span class="line">            &#125;</span><br><span class="line">            list.get(i).setTempPoint(point);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">this</span>.listItems.addAll(list);</span><br><span class="line">        invalidate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Point <span class="title function_">calculateTempPoint</span><span class="params">(<span class="type">int</span> left, <span class="type">int</span> right, <span class="type">int</span> temp)</span> &#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">minHeight</span> <span class="operator">=</span> tempBaseTop;</span><br><span class="line">        <span class="type">double</span> <span class="variable">maxHeight</span> <span class="operator">=</span> tempBaseBottom;</span><br><span class="line">        <span class="type">double</span> <span class="variable">tempY</span> <span class="operator">=</span> maxHeight - (temp - minTemp) * <span class="number">1.0</span> / (maxTemp - minTemp) * (maxHeight - minHeight);</span><br><span class="line">        <span class="type">Point</span> <span class="variable">point</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Point</span>((left + right) / <span class="number">2</span>, (<span class="type">int</span>) tempY);</span><br><span class="line">        <span class="keyword">return</span> point;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onMeasure</span><span class="params">(<span class="type">int</span> widthMeasureSpec, <span class="type">int</span> heightMeasureSpec)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onMeasure(widthMeasureSpec, heightMeasureSpec);</span><br><span class="line">        setMeasuredDimension(mWidth, mHeight);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onLayout</span><span class="params">(<span class="type">boolean</span> changed, <span class="type">int</span> left, <span class="type">int</span> top, <span class="type">int</span> right, <span class="type">int</span> bottom)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onLayout(changed, left, top, right, bottom);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onDraw</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onDraw(canvas);</span><br><span class="line">        onDrawLine(canvas);</span><br><span class="line"><span class="comment">//        drawLeftTempText(canvas);</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; listItems.size(); i++) &#123;</span><br><span class="line">            onDrawTemp(canvas, i);</span><br><span class="line">            onDrawText(canvas, i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">onDrawTemp</span><span class="params">(Canvas canvas, <span class="type">int</span> i)</span> &#123;</span><br><span class="line">        <span class="type">WeatherHoursModel</span> <span class="variable">item</span> <span class="operator">=</span> listItems.get(i);</span><br><span class="line">        <span class="keyword">if</span> (currentItemIndex == i) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">Y</span> <span class="operator">=</span> getTempBarY();</span><br><span class="line">            <span class="type">Rect</span> <span class="variable">targetRect</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Rect</span>(</span><br><span class="line">                    getScrollBarX(),</span><br><span class="line">                    Y - DisplayUtil.dip2px(getContext(), <span class="number">40</span>),</span><br><span class="line">                    getScrollBarX() + DisplayUtil.dip2px(getContext(), <span class="number">92</span>),</span><br><span class="line">                    Y - DisplayUtil.dip2px(getContext(), <span class="number">14</span>));</span><br><span class="line">            <span class="type">Drawable</span> <span class="variable">drawable</span> <span class="operator">=</span> ContextCompat.getDrawable(getContext(), R.drawable.bg_indicator_text);</span><br><span class="line">            drawable.setBounds(targetRect);</span><br><span class="line">            drawable.draw(canvas);</span><br><span class="line">            <span class="comment">//画出温度提示</span></span><br><span class="line">            Paint.<span class="type">FontMetricsInt</span> <span class="variable">fontMetrics</span> <span class="operator">=</span> textPaint.getFontMetricsInt();</span><br><span class="line">            <span class="type">int</span> <span class="variable">baseline</span> <span class="operator">=</span> (targetRect.bottom + targetRect.top - fontMetrics.bottom - fontMetrics.top) / <span class="number">2</span>;</span><br><span class="line">            textPaint.setTextAlign(Paint.Align.CENTER);</span><br><span class="line">            textPaint.setTextSize(DisplayUtil.sp2px(getContext(), <span class="number">10</span>));</span><br><span class="line">            canvas.drawText(TimeUtils.getDateHHmm(item.getTempStamp()) + <span class="string">&quot; &quot;</span> + item.getWeather() + <span class="string">&quot;  &quot;</span> + item.getTemperature() + <span class="string">&quot;°&quot;</span>, targetRect.centerX(), baseline, textPaint);</span><br><span class="line">            <span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> mHeight - bottomTextHeight - DisplayUtil.dip2px(getContext(), <span class="number">4</span>);</span><br><span class="line">            canvas.drawLine(targetRect.centerX(), targetRect.bottom + DisplayUtil.dip2px(getContext(), <span class="number">4</span>), targetRect.centerX(), height, indicatorLinePaint);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 温度的折线,为了折线比较平滑,做了贝塞尔曲线</span></span><br><span class="line"><span class="comment">     * 画了贝塞尔曲线后一点都不平滑,放弃</span></span><br><span class="line"><span class="comment">     * 直接使用直线连接起来,用CornerPathEffect改变连接处的弧度,顺滑无比</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> canvas</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">onDrawLine</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (listItems.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="type">Path</span> <span class="variable">path</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Path</span>();</span><br><span class="line">            <span class="type">Point</span> <span class="variable">point0</span> <span class="operator">=</span> listItems.get(<span class="number">0</span>).getTempPoint();</span><br><span class="line">            path.moveTo(point0.x, point0.y);</span><br><span class="line">            <span class="type">Path</span> <span class="variable">pathBG</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Path</span>();</span><br><span class="line">            pathBG.moveTo(point0.x, point0.y);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; listItems.size(); i++) &#123;</span><br><span class="line">                <span class="type">Point</span> <span class="variable">point</span> <span class="operator">=</span> listItems.get(i).getTempPoint();</span><br><span class="line">                <span class="keyword">if</span> (i != <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="type">Point</span> <span class="variable">pointPre</span> <span class="operator">=</span> listItems.get(i - <span class="number">1</span>).getTempPoint();</span><br><span class="line">                    <span class="keyword">if</span> (i == <span class="number">1</span>) &#123;</span><br><span class="line">                        path.lineTo(point.x, point.y);</span><br><span class="line">                        pathBG.lineTo(point.x, point.y);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        path.rLineTo(point.x - pointPre.x, point.y - pointPre.y);</span><br><span class="line">                        <span class="keyword">if</span> (listItems.get(i).getIcon() != -<span class="number">1</span>)</span><br><span class="line">                            pathBG.rLineTo(point.x - pointPre.x - DisplayUtil.dip2px(getContext(), <span class="number">1</span>), point.y - pointPre.y);</span><br><span class="line">                        <span class="keyword">else</span></span><br><span class="line">                            pathBG.rLineTo(point.x - pointPre.x, point.y - pointPre.y);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="type">Point</span> <span class="variable">pointBackup</span> <span class="operator">=</span> listItems.get(<span class="number">0</span>).getTempPoint();</span><br><span class="line">                    <span class="keyword">if</span> (listItems.get(i).getIcon() != -<span class="number">1</span> || (getGoneBehind(i) &amp;&amp; i == listItems.size() - <span class="number">1</span>)) &#123;</span><br><span class="line">                        <span class="type">int</span> <span class="variable">icon</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">                        <span class="type">int</span> <span class="variable">indexBackUp</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">                        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; i; j++) &#123;</span><br><span class="line">                            <span class="keyword">if</span> (listItems.get(j).getIcon() != -<span class="number">1</span>) &#123;</span><br><span class="line">                                icon = listItems.get(j).getIcon();</span><br><span class="line">                                indexBackUp = j;</span><br><span class="line">                                pointBackup = listItems.get(j).getTempPoint();</span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span> (pointBackup.x &lt; getScrollBarX() + DisplayUtil.dip2px(getContext(), <span class="number">46</span>) &amp;&amp; getScrollBarX() + DisplayUtil.dip2px(getContext(), <span class="number">46</span>) &lt; point.x) &#123;</span><br><span class="line">                            rectPaint.setColor(Color.parseColor(<span class="string">&quot;#33FFFFFF&quot;</span>));</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            rectPaint.setColor(Color.parseColor(<span class="string">&quot;#1AFFFFFF&quot;</span>));</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">if</span> (listItems.get(i).getTempPoint() != pointBackup) &#123;</span><br><span class="line">                            <span class="type">int</span> <span class="variable">height</span> <span class="operator">=</span> mHeight - bottomTextHeight - DisplayUtil.dip2px(getContext(), <span class="number">4</span>) - point.y;</span><br><span class="line">                            pathBG.rLineTo(<span class="number">0</span>, height);</span><br><span class="line">                            pathBG.rLineTo(pointBackup.x - point.x + DisplayUtil.dip2px(getContext(), <span class="number">1</span>), <span class="number">0</span>);</span><br><span class="line">                            canvas.drawPath(pathBG, rectPaint);</span><br><span class="line">                            pathBG.reset();</span><br><span class="line">                            <span class="comment">//移到新的点开始画</span></span><br><span class="line">                            pathBG.moveTo(point.x, point.y);</span><br><span class="line"></span><br><span class="line">                            <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> (point.x - pointBackup.x) / <span class="number">2</span> + pointBackup.x - DisplayUtil.dip2px(getContext(), <span class="number">10</span>);</span><br><span class="line">                            <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> (point.x - pointBackup.x) / <span class="number">2</span> + pointBackup.x + DisplayUtil.dip2px(getContext(), <span class="number">10</span>);</span><br><span class="line">                            <span class="type">int</span> <span class="variable">newLeft</span> <span class="operator">=</span> (point.x - (pointBackup.x - getItemLeftMargin(indexBackUp))) / <span class="number">2</span> + (pointBackup.x - getItemLeftMargin(indexBackUp));</span><br><span class="line">                            <span class="type">int</span> <span class="variable">newRight</span> <span class="operator">=</span> ((point.x + getItemRightMargin(i)) - pointBackup.x) / <span class="number">2</span> + pointBackup.x;</span><br><span class="line">                            <span class="keyword">if</span> (getItemLeftMargin(indexBackUp) &lt; <span class="number">0</span> &amp;&amp; newLeft + DisplayUtil.dip2px(getContext(), <span class="number">20</span>) &lt; point.x &amp;&amp; i - indexBackUp &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                                left = newLeft - DisplayUtil.dip2px(getContext(), <span class="number">10</span>);</span><br><span class="line">                                right = left + DisplayUtil.dip2px(getContext(), <span class="number">20</span>);</span><br><span class="line">                            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (getItemLeftMargin(indexBackUp) &lt; <span class="number">0</span> &amp;&amp; newLeft + DisplayUtil.dip2px(getContext(), <span class="number">40</span>) &gt;= point.x &amp;&amp; i - indexBackUp &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                                left = point.x - DisplayUtil.dip2px(getContext(), <span class="number">30</span>);</span><br><span class="line">                                right = left + DisplayUtil.dip2px(getContext(), <span class="number">20</span>);</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">if</span> (getItemRightMargin(i) &lt; <span class="number">0</span> &amp;&amp; newRight &gt; pointBackup.x + DisplayUtil.dip2px(getContext(), <span class="number">10</span>) &amp;&amp; i - indexBackUp &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                                right = newRight + DisplayUtil.dip2px(getContext(), <span class="number">10</span>);</span><br><span class="line">                                left = right - DisplayUtil.dip2px(getContext(), <span class="number">20</span>);</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">if</span> (getItemLeftMargin(indexBackUp) &lt; <span class="number">0</span> &amp;&amp; getItemRightMargin(i) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                                left = pointBackup.x - getItemLeftMargin(indexBackUp) + scrollWidth / <span class="number">2</span> - DisplayUtil.dip2px(getContext(), <span class="number">10</span>);</span><br><span class="line">                                right = left + DisplayUtil.dip2px(getContext(), <span class="number">20</span>);</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="type">Drawable</span> <span class="variable">drawable</span> <span class="operator">=</span> ContextCompat.getDrawable(getContext(), icon);</span><br><span class="line">                            drawable.setBounds(left,</span><br><span class="line">                                    tempBaseBottom + DisplayUtil.dip2px(getContext(), <span class="number">5</span>),</span><br><span class="line">                                    right,</span><br><span class="line">                                    tempBaseBottom + DisplayUtil.dip2px(getContext(), <span class="number">25</span>));</span><br><span class="line">                            drawable.draw(canvas);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            canvas.drawPath(path, linePaint);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="title function_">getGoneBehind</span><span class="params">(<span class="type">int</span> index)</span> &#123;</span><br><span class="line">        List&lt;Boolean&gt; data = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> index; k &lt; listItems.size(); k++) &#123;</span><br><span class="line">            data.add(listItems.get(k).getIcon() == -<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> !data.contains(<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//绘制底部时间</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">onDrawText</span><span class="params">(Canvas canvas, <span class="type">int</span> i)</span> &#123;</span><br><span class="line">        textPaint.setTextAlign(Paint.Align.CENTER);</span><br><span class="line">        <span class="type">String</span> <span class="variable">text</span> <span class="operator">=</span> TimeUtils.getDateHHmm(listItems.get(i).getTempStamp());</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> MARGIN_LEFT_ITEM + i * ITEM_WIDTH;</span><br><span class="line">        <span class="type">int</span> <span class="variable">right</span> <span class="operator">=</span> left + ITEM_WIDTH - <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">bottom</span> <span class="operator">=</span> mHeight - bottomTextHeight;</span><br><span class="line">        <span class="type">Rect</span> <span class="variable">targetRect</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Rect</span>(left, bottom, right, bottom + bottomTextHeight);</span><br><span class="line">        Paint.<span class="type">FontMetricsInt</span> <span class="variable">fontMetrics</span> <span class="operator">=</span> textPaint.getFontMetricsInt();</span><br><span class="line">        <span class="type">int</span> <span class="variable">baseline</span> <span class="operator">=</span> (targetRect.bottom + targetRect.top - fontMetrics.bottom - fontMetrics.top) / <span class="number">2</span>;</span><br><span class="line">        textPaint.setTextSize(DisplayUtil.sp2px(getContext(), <span class="number">12</span>));</span><br><span class="line">        <span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">            canvas.drawText(text, left + (ITEM_WIDTH - <span class="number">1</span>) / <span class="number">2</span>, baseline, textPaint);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">drawLeftTempText</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (listItems.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">//画最左侧的文字</span></span><br><span class="line">            textPaint.setTextAlign(Paint.Align.LEFT);</span><br><span class="line">            textPaint.setTextSize(DisplayUtil.sp2px(getContext(), <span class="number">13</span>));</span><br><span class="line">            canvas.drawText(maxTemp + <span class="string">&quot;°&quot;</span>, DisplayUtil.sp2px(getContext(), <span class="number">15</span>), tempBaseTop, textPaint);</span><br><span class="line">            canvas.drawText(minTemp + <span class="string">&quot;°&quot;</span>, DisplayUtil.sp2px(getContext(), <span class="number">15</span>), tempBaseBottom, textPaint);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//设置scrollerView的滚动条的位置，通过位置计算当前的时段</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setScrollOffset</span><span class="params">(<span class="type">int</span> offset, <span class="type">int</span> maxScrollOffset, <span class="type">int</span> scrollWidth)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.maxScrollOffset = maxScrollOffset;</span><br><span class="line">        <span class="built_in">this</span>.scrollWidth = scrollWidth;</span><br><span class="line">        scrollOffset = offset;</span><br><span class="line">        currentItemIndex = calculateItemIndex();</span><br><span class="line">        invalidate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 点距离左边的位置</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> i</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getItemLeftMargin</span><span class="params">(<span class="type">int</span> i)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> MARGIN_LEFT_ITEM + i * ITEM_WIDTH + (ITEM_WIDTH - <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">return</span> left - scrollOffset;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 点距离右边的位置</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> i</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getItemRightMargin</span><span class="params">(<span class="type">int</span> i)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> MARGIN_LEFT_ITEM + i * ITEM_WIDTH + (ITEM_WIDTH - <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">return</span> scrollWidth - (left - scrollOffset);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//通过滚动条偏移量计算当前选择的时刻</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">calculateItemIndex</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> getScrollBarX();</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> MARGIN_LEFT_ITEM - ITEM_WIDTH;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; ITEM_SIZE; i++) &#123;</span><br><span class="line">            sum += ITEM_WIDTH;</span><br><span class="line">            <span class="keyword">if</span> (x &lt; sum)</span><br><span class="line">                <span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ITEM_SIZE - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getScrollBarX</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> (ITEM_SIZE - <span class="number">5</span>) * ITEM_WIDTH * scrollOffset / maxScrollOffset;</span><br><span class="line">        x = x + MARGIN_LEFT_ITEM;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//计算温度提示文字的运动轨迹</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="title function_">getTempBarY</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> getScrollBarX();</span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> MARGIN_LEFT_ITEM;</span><br><span class="line">        <span class="type">Point</span> <span class="variable">startPoint</span> <span class="operator">=</span> <span class="literal">null</span>, endPoint;</span><br><span class="line">        <span class="type">int</span> i;</span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; ITEM_SIZE; i++) &#123;</span><br><span class="line">            sum += ITEM_WIDTH;</span><br><span class="line">            <span class="keyword">if</span> (x &lt; sum) &#123;</span><br><span class="line">                startPoint = listItems.get(i).getTempPoint();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (i + <span class="number">1</span> &gt;= ITEM_SIZE || startPoint == <span class="literal">null</span>)</span><br><span class="line">            <span class="keyword">return</span> listItems.get(ITEM_SIZE - <span class="number">1</span>).getTempPoint().y;</span><br><span class="line">        endPoint = listItems.get(i + <span class="number">1</span>).getTempPoint();</span><br><span class="line">        <span class="type">int</span> <span class="variable">left</span> <span class="operator">=</span> MARGIN_LEFT_ITEM + i * ITEM_WIDTH;</span><br><span class="line">        <span class="type">int</span> <span class="variable">y</span> <span class="operator">=</span> (<span class="type">int</span>) (startPoint.y + (x - left) * <span class="number">1.0</span> / ITEM_WIDTH * (endPoint.y - startPoint.y));</span><br><span class="line">        <span class="keyword">return</span> y;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>IndexHorizontalScrollView.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IndexHorizontalScrollView</span> <span class="keyword">extends</span> <span class="title class_">HorizontalScrollView</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Today24HourView today24HourView;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">IndexHorizontalScrollView</span><span class="params">(Context context)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>(context, <span class="literal">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">IndexHorizontalScrollView</span><span class="params">(Context context, AttributeSet attrs)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>(context, attrs, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">IndexHorizontalScrollView</span><span class="params">(Context context, AttributeSet attrs, <span class="type">int</span> defStyleAttr)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">onDraw</span><span class="params">(Canvas canvas)</span> &#123;</span><br><span class="line">        <span class="built_in">super</span>.onDraw(canvas);</span><br><span class="line">        <span class="type">int</span> <span class="variable">offset</span> <span class="operator">=</span> computeHorizontalScrollOffset();</span><br><span class="line">        <span class="type">int</span> <span class="variable">maxOffset</span> <span class="operator">=</span> computeHorizontalScrollRange() - DisplayUtil.getScreenWidth(getContext());</span><br><span class="line">        <span class="keyword">if</span> (today24HourView != <span class="literal">null</span>) &#123;</span><br><span class="line">            today24HourView.setScrollOffset(offset, maxOffset, getWidth());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setToday24HourView</span><span class="params">(Today24HourView today24HourView)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.today24HourView = today24HourView;</span><br><span class="line">        invalidate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="xml中使用"><a href="#xml中使用" class="headerlink" title="xml中使用"></a>xml中使用</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">com.weather.gorgeous.custom_view.IndexHorizontalScrollView</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_width</span>=<span class="string">&quot;0dp&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:fadeScrollbars</span>=<span class="string">&quot;false&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:scrollbars</span>=<span class="string">&quot;none&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">com.weather.gorgeous.custom_view.Today24HourView</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_width</span>=<span class="string">&quot;match_parent&quot;</span></span></span><br><span class="line"><span class="tag">          <span class="attr">android:layout_height</span>=<span class="string">&quot;wrap_content&quot;</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">com.weather.gorgeous.custom_view.IndexHorizontalScrollView</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="Activity中使用"><a href="#Activity中使用" class="headerlink" title="Activity中使用"></a>Activity中使用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">binding.indexHorizontalScrollView.setToday24HourView(binding.today24Hour);</span><br><span class="line">binding.today24Hour.setHourItems(data)</span><br></pre></td></tr></table></figure><h2 id="实体类"><a href="#实体类" class="headerlink" title="实体类"></a>实体类</h2><p><code>WeatherHoursModel.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WeatherHoursModel</span> &#123;</span><br><span class="line">    <span class="comment">// 天气图标</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> icon;</span><br><span class="line">    <span class="comment">// 温度</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> temperature;</span><br><span class="line">    <span class="comment">//天气</span></span><br><span class="line">    <span class="keyword">private</span> String weather;</span><br><span class="line">    <span class="comment">// 时间戳</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">long</span> tempStamp;</span><br><span class="line">    <span class="comment">//x,y轴</span></span><br><span class="line">    <span class="keyword">private</span> Point tempPoint;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getDateHHmm</span><span class="params">(<span class="type">long</span> time)</span> &#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">formatTime</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SimpleDateFormat</span>(<span class="string">&quot;HH:mm&quot;</span>).format(<span class="keyword">new</span> <span class="title class_">Date</span>(time));</span><br><span class="line">    <span class="keyword">return</span> formatTime;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">dip2px</span><span class="params">(Context context, <span class="type">float</span> dipValue)</span> &#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="type">float</span> <span class="variable">scale</span> <span class="operator">=</span> context.getResources().getDisplayMetrics().density;</span><br><span class="line">    <span class="keyword">return</span> (<span class="type">int</span>) (dipValue * scale + <span class="number">0.5f</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">sp2px</span><span class="params">(Context context, <span class="type">float</span> spValue)</span> &#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="type">float</span> <span class="variable">fontScale</span> <span class="operator">=</span> context.getResources().getDisplayMetrics().scaledDensity;</span><br><span class="line">    <span class="keyword">return</span> (<span class="type">int</span>) (spValue * fontScale + <span class="number">0.5f</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">getScreenWidth</span><span class="params">(Context context)</span>&#123;</span><br><span class="line">    <span class="type">DisplayMetrics</span> <span class="variable">dm</span> <span class="operator">=</span> context.getResources().getDisplayMetrics();</span><br><span class="line">    <span class="keyword">return</span> dm.widthPixels;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>到这里就结束了，有写的不好的地方还请指出。</p><h2 id="Demo地址"><a href="#Demo地址" class="headerlink" title="Demo地址"></a>Demo地址</h2><p><a href="https://github.com/LazyIonEs/TwentyFourHour">Kotlin</a></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://links.jianshu.com/go?to=https://blog.csdn.net/yuton9/article/details/118187905">Android 仿墨迹天气24小时预报</a><br><a href="https://www.jianshu.com/p/47810841abf9">24小时天气（可滑动）</a><br><a href="https://links.jianshu.com/go?to=https://github.com/zx391324751/MoJiDemo">MoJiDemo-作者zx391324751</a></p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
          <category> 自定义View </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> 自定义View </tag>
            
            <tag> 天气 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/post/4a17b156.html"/>
      <url>/post/4a17b156.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
          <category> hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> hexo </tag>
            
            <tag> hello world </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
